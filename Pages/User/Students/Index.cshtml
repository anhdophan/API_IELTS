@page
@model api.Pages.User.Students.IndexModel
@{
    ViewData["Title"] = "L&T Education - HỆ Thống Học Trực Tuyến";

    Layout = "~/Pages/Shared/_LayoutStudent.cshtml";
    ViewData["StudentName"] = Model.StudentName;
    ViewData["StudentAvatar"] = Model.StudentAvatar;
}

<link rel="stylesheet" href="~/css/site-student.css" asp-append-version="true" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<style>
    .calendar-day.exam-day {
        background-color: #ff4d4d; /* đỏ */
        color: white;
        border-radius: 6px;
    }

    .calendar-day.schedule-day {
        background-color: #ffc107; /* vàng */
        color: black;
        border-radius: 6px;
    }

    .calendar-day.exam-day.schedule-day {
        background-image: linear-gradient(45deg, #ff4d4d 50%, #ffc107 50%);
        color: white;
    }

    .calendar-day.current-day {
        border: 2px solid #007bff;
    }

    .calendar-day.empty {
        background-color: transparent;
        pointer-events: none;
    }
</style>

<section class="banner">
    <div class="container">
        <div class="banner-main-content">
            <h1>HUFLIT 2025<br>TUYỂN SINH THẠC SĨ</h1>
            <p>Chào mừng bạn đến với hệ thống học tập trực tuyến của L&T Education!</p>
                <div class="banner-info-boxes">
                    <div class="banner-info-box">
                        <strong>1.000+</strong>
                        <span>Học viên đã tốt nghiệp</span>
                    </div>
                    <div class="banner-info-box">
                        <strong>50+</strong>
                        <span>Khóa học đa dạng</span>
                    </div>
                    <div class="banner-info-box">
                        <strong>10+</strong>
                        <span>Năm kinh nghiệm</span>
                    </div>
                </div>
            </div>
           
        </div>
    </section>
<main class="main-content">
    <div class="container">
        <section class="icon-boxes-small">
            <a href="#" class="icon-box-small">
                <i class="fas fa-home"></i>
                <p>Trang chủ</p>
            </a>
            <a href="#" class="icon-box-small">
                <i class="fas fa-bell"></i>
                <p>Thông báo</p>
            </a>
            <a href="/User/Students/ScheduleCalendar" class="icon-box-small">
                <i class="fas fa-calendar-alt"></i>
                <p>Thời khóa biểu</p>
            </a>
            <a href="#" class="icon-box-small">
                <i class="fas fa-book-open"></i>
                <p>Đăng ký thêm khóa học</p>
            </a>
            <a href="#" class="icon-box-small">
                <i class="fas fa-chart-line"></i>
                <p>Tra cứu điểm</p>
            </a>
            <a href="#" class="icon-box-small">
                <i class="fas fa-envelope"></i>
                <p>Liên hệ</p>
            </a>
            <!-- Thêm link tới Profile -->
            <a href="/User/Students/Profile" class="icon-box-small">
                <i class="fas fa-user-circle"></i>
                <p>Thông tin cá nhân</p>
            </a>
        </section>

        <section class="card-section">
            <div class="section-header">
                <h2>Lịch Thi</h2>
                <a href="#" class="view-all">Xem chi tiết</a>
            </div>
            <div class="notification-list">
                <ul>
                    @if (Model.Exams != null && Model.Exams.Any())
                    {
                        foreach (var exam in Model.Exams.OrderBy(e => e.ExamDate).Take(5))
                        {
                            <li>
                                <div class="date">
                                    <span>@exam.ExamDate.Day</span>Tháng @exam.ExamDate.Month
                                </div>
                                <div class="content">
                                    <strong>
                                        <a href="/User/Students/ExamPage?examId=@exam.ExamId" style="color:inherit;text-decoration:underline;">
                                            [Lịch thi] @exam.Title
                                        </a>
                                    </strong>
                                    <p>Bắt đầu: @exam.StartTime.ToString("HH:mm dd/MM/yyyy")</p>
                                    <p>Kết thúc: @exam.EndTime.ToString("HH:mm dd/MM/yyyy")</p>
                                </div>
                                <div class="actions">
                                    <a href="/User/Students/ExamPage?examId=@exam.ExamId">Chi tiết</a>
                                </div>
                            </li>
                        }
                    }
                    else
                    {
                        <li>
                            <div class="content">Không có lịch thi nào sắp tới.</div>
                        </li>
                    }
                </ul>
            </div>
        </section>
<section class="card-section">
    <div class="section-header">
        <h2>Lịch học </h2>
        <a href="#" class="view-all">Xem toàn bộ</a>
    </div>
    <div class="table-section">
        <div class="week-selector-container">
            <label for="weekSelector">Chọn tuần:</label>
            <select id="weekSelector" class="form-control">
                </select>
        </div>
        <table>
            <thead>
                <tr>
                    <th>Thứ</th>
                    <th>Ngày học</th>
                    <th>Giờ bắt đầu</th>
                    <th>Giờ kết thúc</th>
                    <th>Phòng học</th>
                    <th>Giảng viên</th>
                </tr>
            </thead>
            <tbody id="scheduleTableBody">
                </tbody>
        </table>
    </div>
</section>
        <section class="feature-cards">
            <a href="#" class="feature-card">
                <div class="icon"><i class="fas fa-history"></i></div>
                <div class="content">
                    <h4>Lịch sử học tập</h4>
                    <p>Xem lại quá trình học tập, các bài thi đã làm, điểm số và kết quả.</p>
                    <span class="view-more">Xem chi tiết</span>
                </div>
            </a>
            <a href="#" class="feature-card">
                <div class="icon"><i class="fas fa-bullhorn"></i></div>
                <div class="content">
                    <h4>Thông báo chung</h4>
                    <p>Cập nhật những thông tin, tin tức mới nhất từ L&T Education.</p>
                    <span class="view-more">Xem chi tiết</span>
                </div>
            </a>
            <a href="#" class="feature-card">
                <div class="icon"><i class="fas fa-calendar-check"></i></div>
                <div class="content">
                    <h4>Thời khóa biểu cá nhân</h4>
                    <p>Xem thời gian biểu các lớp học, phòng học, giáo viên chi tiết.</p>
                    <span class="view-more">Xem chi tiết</span>
                </div>
            </a>
            <a href="#" class="feature-card">
                <div class="icon"><i class="fas fa-file-invoice"></i></div>
                <div class="content">
                    <h4>Đăng ký học phần</h4>
                    <p>Thực hiện đăng ký các học phần cho kỳ học tiếp theo.</p>
                    <span class="view-more">Xem chi tiết</span>
                </div>
            </a>
             <a href="#" class="feature-card">
                <div class="icon"><i class="fas fa-poll"></i></div>
                <div class="content">
                    <h4>Tra cứu điểm</h4>
                    <p>Xem kết quả điểm thi các môn học và điểm trung bình tích lũy.</p>
                    <span class="view-more">Xem chi tiết</span>
                </div>
            </a>
             <a href="#" class="feature-card">
                <div class="icon"><i class="fas fa-receipt"></i></div>
                <div class="content">
                    <h4>Thanh toán học phí</h4>
                    <p>Quản lý các khoản học phí, lịch sử thanh toán và tình trạng công nợ.</p>
                    <span class="view-more">Xem chi tiết</span>
                </div>
            </a>
        </section>

        <section class="card-section">
            <div class="section-header">
                <h2>Đào tạo</h2>
                <a href="#" class="view-all">Xem tất cả</a>
            </div>
            <div class="colorful-grid">
                <a href="#" class="grid-item-colored blue span-2-col tall top-left-content">
                    <h4>Chương trình đào tạo</h4>
                    <p>Thông tin chi tiết về các ngành đào tạo và chương trình học.</p>
                </a>
                <a href="#" class="grid-item-colored pink">
                    <i class="fas fa-user-graduate"></i>
                    <h4>Tuyển sinh</h4>
                </a>
                <a href="#" class="grid-item-colored purple">
                    <i class="fas fa-users"></i>
                    <h4>Sinh viên</h4>
                </a>
                <a href="#" class="grid-item-colored orange">
                    <i class="fas fa-briefcase"></i>
                    <h4>Việc làm</h4>
                </a>
                <a href="#" class="grid-item-colored green">
                    <i class="fas fa-globe"></i>
                    <h4>Quốc tế</h4>
                </a>
                <a href="#" class="grid-item-colored teal">
                    <i class="fas fa-laptop-code"></i>
                    <h4>Công nghệ</h4>
                </a>
                <a href="#" class="grid-item-colored cyan">
                    <i class="fas fa-book"></i>
                    <h4>Thư viện</h4>
                </a>
                <a href="#" class="grid-item-colored red">
                    <i class="fas fa-university"></i>
                    <h4>Khoa học</h4>
                </a>
            </div>
        </section>

        <section class="card-section">
            <div class="section-header">
                <h2>Hoạt động học tập</h2>
                <a href="#" class="view-all">Xem tất cả</a>
            </div>
            <div class="colorful-grid">
                <a href="#" class="grid-item-colored blue">
                    <i class="fas fa-graduation-cap"></i>
                    <h4>Đề án tốt nghiệp</h4>
                </a>
                <a href="#" class="grid-item-colored pink">
                    <i class="fas fa-chalkboard-teacher"></i>
                    <h4>Giảng viên</h4>
                </a>
                <a href="#" class="grid-item-colored purple">
                    <i class="fas fa-puzzle-piece"></i>
                    <h4>Câu lạc bộ</h4>
                </a>
                <a href="#" class="grid-item-colored orange">
                    <i class="fas fa-medal"></i>
                    <h4>Thành tích</h4>
                </a>
            </div>
        </section>

     <section class="calendar-section">
    <div class="calendar-view">
        <div class="calendar-header">
            <button id="prevMonthBtn">&lt;</button>
            <h3 id="currentMonthLabel">Tháng</h3>
            <button id="nextMonthBtn">&gt;</button>
        </div>
        <div class="days-of-week">
            <span>CN</span><span>T2</span><span>T3</span><span>T4</span><span>T5</span><span>T6</span><span>T7</span>
        </div>
        <div class="calendar-grid" id="calendarGrid">
            <!-- Các ô ngày sẽ render bằng JavaScript -->
        </div>
    </div>
    <div class="event-list">
        <h3>Sự kiện trong tháng</h3>
        <ul id="monthlyEventList">
            <!-- Danh sách sự kiện -->
        </ul>
    </div>
</section>

    
    </div>
</main>


<script>
    document.addEventListener("DOMContentLoaded", async function () {
        const classIdForSchedule = "@Model.StudentClassId".trim();
        console.log("classIdForSchedule:", classIdForSchedule);
        const scheduleUrl = `https://api-ielts-cgn8.onrender.com/api/Class/${classIdForSchedule}/studydays`;
        const classUrl = `https://api-ielts-cgn8.onrender.com/api/Class/${classIdForSchedule}`;
        const courseUrl = `https://api-ielts-cgn8.onrender.com/api/Course/all`;
        const teacherUrl = `https://api-ielts-cgn8.onrender.com/api/Teacher/all`;

        try {
            const [scheduleRes, classRes, courseRes, teacherRes] = await Promise.all([
                fetch(scheduleUrl),
                fetch(classUrl),
                fetch(courseUrl),
                fetch(teacherUrl)
            ]);

            if (!scheduleRes.ok || !classRes.ok || !courseRes.ok || !teacherRes.ok) {
                throw new Error("❌ Lỗi khi tải API.");
            }

            const schedule = await scheduleRes.json();
            const classData = await classRes.json();
            const courses = await courseRes.json();
            const teachers = await teacherRes.json();

            const course = courses.find(c => c.id === classData.courseId);
            const teacher = teachers.find(t => t.id === classData.teacherId);

            renderScheduleTable(schedule, course?.name, teacher?.name, classData?.name || "Phòng A");

        } catch (err) {
            console.error("❌ Lỗi khi tải dữ liệu:", err);
        }

        function renderScheduleTable(schedule, courseName, teacherName, room) {
            const tbody = document.querySelector("#scheduleTableBody");
            if (!tbody) return;

            tbody.innerHTML = "";

            // Nhóm lịch theo tuần
            const groupedByWeek = {};
            schedule.forEach(item => {
                const date = new Date(item.date);
                const weekStart = getMonday(date).toISOString().split("T")[0];
                if (!groupedByWeek[weekStart]) {
                    groupedByWeek[weekStart] = [];
                }
                groupedByWeek[weekStart].push(item);
            });

            // Tạo dropdown tuần
            const weekSelector = document.getElementById("weekSelector");
            Object.keys(groupedByWeek).forEach((weekStart, idx) => {
                const opt = document.createElement("option");
                opt.value = weekStart;
                opt.textContent = `Tuần bắt đầu ${weekStart}`;
                if (idx === 0) opt.selected = true;
                weekSelector.appendChild(opt);
            });

            // Hiển thị tuần đầu tiên
            renderRows(groupedByWeek[Object.keys(groupedByWeek)[0]]);

            // Lắng nghe thay đổi tuần
            weekSelector.addEventListener("change", e => {
                const selectedWeek = e.target.value;
                renderRows(groupedByWeek[selectedWeek]);
            });

            function renderRows(data) {
                tbody.innerHTML = "";
                data.forEach((item, index) => {
                    const row = document.createElement("tr");
                    row.innerHTML = `
                      
                        <td>${item.dayOfWeek}</td>
                        <td>${new Date(item.date).toLocaleDateString("vi-VN")}</td>
                        <td>${item.startTime}</td>
                        <td>${item.endTime}</td>
                        <td>${room || "..."}</td>
                        <td>${teacherName || "..."}</td>
                       
                    `;
                    tbody.appendChild(row);
                });
            }

            function getMonday(d) {
                d = new Date(d);
                const day = d.getDay();
                const diff = d.getDate() - day + (day === 0 ? -6 : 1);
                return new Date(d.setDate(diff));
            }
        }
    });
    document.addEventListener("DOMContentLoaded", async function () {
        const classId = "@Model.StudentClassId";
        const calendarGrid = document.getElementById("calendarGrid");
        const eventList = document.getElementById("monthlyEventList");
        const monthLabel = document.getElementById("currentMonthLabel");

        const prevBtn = document.getElementById("prevMonthBtn");
        const nextBtn = document.getElementById("nextMonthBtn");

        let currentMonth = new Date();

        let schedule = [];
        let exams = [];

        async function loadData() {
            try {
                const [scheduleRes, examRes] = await Promise.all([
                    fetch(`https://api-ielts-cgn8.onrender.com/api/Class/${classId}/studydays`),
                    fetch(`https://api-ielts-cgn8.onrender.com/api/Exam/class/${classId}`)
                ]);
                schedule = await scheduleRes.json();
                exams = await examRes.json();

                renderMonth(currentMonth);
            } catch (e) {
                console.error("Lỗi tải dữ liệu:", e);
            }
        }

        function renderMonth(date) {
            const year = date.getFullYear();
            const month = date.getMonth();
            const firstDayOfMonth = new Date(year, month, 1);
            const daysInMonth = new Date(year, month + 1, 0).getDate();
            const startDayOfWeek = firstDayOfMonth.getDay(); // CN = 0

            monthLabel.textContent = `Tháng ${month + 1}, ${year}`;
            calendarGrid.innerHTML = "";
            eventList.innerHTML = "";

            // Fill empty cells before 1st
            for (let i = 0; i < startDayOfWeek; i++) {
                const emptyCell = document.createElement("span");
                emptyCell.className = "calendar-day empty";
                calendarGrid.appendChild(emptyCell);
            }

            for (let day = 1; day <= daysInMonth; day++) {
                const cellDate = new Date(year, month, day);
                const cell = document.createElement("span");
                cell.className = "calendar-day";

                if (isSameDate(cellDate, new Date())) {
                    cell.classList.add("current-day");
                }

                const hasExam = exams.some(e => isSameDate(new Date(e.examDate), cellDate));
                const hasSchedule = schedule.some(s => isSameDate(new Date(s.date), cellDate));

               if (hasExam && hasSchedule) {
    cell.classList.add("exam-day", "schedule-day"); // cả hai
} else if (hasExam) {
    cell.classList.add("exam-day"); // màu đỏ
} else if (hasSchedule) {
    cell.classList.add("schedule-day"); // màu vàng
}

                cell.innerHTML = `<strong>${day}</strong>`;
                calendarGrid.appendChild(cell);
            }

            // List all events in month
            const monthlyEvents = [];

            for (const s of schedule) {
                const d = new Date(s.date);
                if (d.getMonth() === month && d.getFullYear() === year) {
                    monthlyEvents.push({
                        time: `${s.startTime} - ${s.endTime}`,
                        title: `Buổi học (${s.dayOfWeek})`,
                        date: d
                    });
                }
            }

            for (const e of exams) {
                const d = new Date(e.examDate);
                if (d.getMonth() === month && d.getFullYear() === year) {
                    monthlyEvents.push({
                        time: new Date(e.startTime).toLocaleTimeString("vi-VN", { hour: '2-digit', minute: '2-digit' }) +
                            " - " +
                            new Date(e.endTime).toLocaleTimeString("vi-VN", { hour: '2-digit', minute: '2-digit' }),
                        title: `Lịch thi: ${e.title}`,
                        date: d
                    });
                }
            }

            if (monthlyEvents.length === 0) {
                eventList.innerHTML = `<li><div class="event-title">Không có sự kiện nào trong tháng.</div></li>`;
                return;
            }

            for (const item of monthlyEvents.sort((a, b) => a.date - b.date)) {
                const li = document.createElement("li");
                li.innerHTML = `
                    <div class="event-time">${formatDate(item.date)} - ${item.time}</div>
                    <div class="event-title">${item.title}</div>
                `;
                eventList.appendChild(li);
            }
        }

        prevBtn.addEventListener("click", () => {
            currentMonth.setMonth(currentMonth.getMonth() - 1);
            renderMonth(currentMonth);
        });

        nextBtn.addEventListener("click", () => {
            currentMonth.setMonth(currentMonth.getMonth() + 1);
            renderMonth(currentMonth);
        });

        function formatDate(date) {
            return date.toLocaleDateString("vi-VN", { day: '2-digit', month: '2-digit' });
        }

        function isSameDate(a, b) {
            return a.getFullYear() === b.getFullYear() &&
                a.getMonth() === b.getMonth() &&
                a.getDate() === b.getDate();
        }

        await loadData();
    });
</script>
