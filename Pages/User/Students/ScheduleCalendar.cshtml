@page
@model api.Pages.User.Students.ScheduleCalendarModel
@{
    ViewData["Title"] = "Lịch học và lịch thi - L&T Education";
     Layout = "~/Pages/Shared/_LayoutStudent.cshtml";
    ViewData["StudentName"] = Model.StudentName;
    ViewData["StudentAvatar"] = Model.StudentAvatar;
}
<link rel="stylesheet" href="~/css/calendar-style.css" asp-append-version="true" />

<h2 class="page-title">Lịch học & Lịch thi của tôi</h2>

<div class="calendar-container">
    <div class="calendar-header">
        <button id="prevMonth">&lt;</button>
        <h3 id="currentMonth">Tháng ...</h3>
        <button id="nextMonth">&gt;</button>
    </div>
    <div class="calendar-days">
        <span>T2</span><span>T3</span><span>T4</span><span>T5</span><span>T6</span><span>T7</span><span>CN</span>
    </div>
    <div class="calendar-grid" id="calendarGrid">
        <!-- Lịch sẽ được render bằng JS -->
    </div>
</div>

@section Scripts {
<script>
    document.addEventListener("DOMContentLoaded", async function () {
        const classId = "@Model.StudentClassId";

        const scheduleUrl = `https://api-ielts-cgn8.onrender.com/api/Class/${classId}/studydays`;
        const examUrl = `https://api-ielts-cgn8.onrender.com/api/Exam/all`;

        let schedule = [], exams = [];

        try {
            const [scheduleRes, examRes] = await Promise.all([
                fetch(scheduleUrl),
                fetch(examUrl)
            ]);
            schedule = await scheduleRes.json();
            const allExams = await examRes.json();
            exams = allExams.filter(e => e.idClass == classId);
        } catch (err) {
            console.error("❌ Lỗi khi tải dữ liệu:", err);
            return;
        }

        const calendarGrid = document.getElementById("calendarGrid");
        const monthLabel = document.getElementById("currentMonth");
        let currentDate = new Date();

        function renderCalendar(date) {
            calendarGrid.innerHTML = "";
            const year = date.getFullYear();
            const month = date.getMonth();
            const firstDay = new Date(year, month, 1);
            const lastDay = new Date(year, month + 1, 0);
            const daysInMonth = lastDay.getDate();
            const startDay = (firstDay.getDay() + 6) % 7; // Đổi CN = 0 thành cuối tuần

            monthLabel.textContent = `Tháng ${month + 1} - ${year}`;

            // Khoảng trống đầu tháng
            for (let i = 0; i < startDay; i++) {
                const emptyCell = document.createElement("div");
                emptyCell.className = "calendar-day empty";
                calendarGrid.appendChild(emptyCell);
            }

            // Tạo ngày
            for (let d = 1; d <= daysInMonth; d++) {
                const cell = document.createElement("div");
                const thisDate = new Date(year, month, d);
                const isoDate = thisDate.toISOString().split("T")[0];

                cell.className = "calendar-day";
                cell.innerHTML = `<div class="date-number">${d}</div>`;

                const dayStudy = schedule.filter(s => s.date.split("T")[0] === isoDate);
                const dayExams = exams.filter(e => e.examDate.split("T")[0] === isoDate);

                dayStudy.forEach(study => {
                    const div = document.createElement("div");
                    div.className = "event study";
                    div.textContent = `Học: ${study.dayOfWeek}`;
                    cell.appendChild(div);
                });

                dayExams.forEach(exam => {
                    const div = document.createElement("div");
                    div.className = "event exam";
                    div.textContent = `Thi: ${exam.title}`;
                    cell.appendChild(div);
                });

                calendarGrid.appendChild(cell);
            }
        }

        renderCalendar(currentDate);

        document.getElementById("prevMonth").onclick = () => {
            currentDate.setMonth(currentDate.getMonth() - 1);
            renderCalendar(currentDate);
        };

        document.getElementById("nextMonth").onclick = () => {
            currentDate.setMonth(currentDate.getMonth() + 1);
            renderCalendar(currentDate);
        };
    });
</script>
}
